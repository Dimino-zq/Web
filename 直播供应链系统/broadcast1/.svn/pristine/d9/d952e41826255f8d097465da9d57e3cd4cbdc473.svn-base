package edu.hfu.broadcast.service.sysset;

import java.util.Date;
import java.util.List;

import javax.annotation.Resource;
import javax.transaction.Transactional;

import org.springframework.stereotype.Service;

import edu.hfu.broadcast.bean.AnchorInformation;
import edu.hfu.broadcast.bean.SysUser;
import edu.hfu.broadcast.dao.sysset.AnchorManageDao;
import edu.hfu.broadcast.util.MD5Util;


@Service
@Transactional
public class AnchorManageService {

	@Resource
	AnchorManageDao anchordao;
	
	/**
	 * 查询所有主播数据，返回主播数据List集合
	 * @return List
	 * @throws Exception
	 */
	public List<AnchorInformation> getAllAnchor() throws Exception {
		return anchordao.getAllAnchor();
	}

	/**
	 * 根据条件查询主播数据，返回主播数据List集合
	 * @param anch
	 * @return List
	 * @throws Exception
	 */
	public List<AnchorInformation> getAnchorByCon(AnchorInformation anch) throws Exception {
		return anchordao.getAnchorByCon(anch);
	}

	/**
	 * 根据条件分页查询主播数据，返回主播数据List集合
	 * @param anch
	 * @param pageNo
	 * @param pageSize
	 * @return List
	 * @throws Exception
	 */
	public List<AnchorInformation> getAnchorByCon(AnchorInformation anch, int pageNo, int pageSize) throws Exception {
		return anchordao.getAnchorByCon(anch, pageNo, pageSize);
	}

	/**
	 * 根据条件查询主播数据，返回主播数据的条数
	 * @param anch
	 * @return int
	 * @throws Exception
	 */
	public int getAnchorCountByCon(AnchorInformation anch) throws Exception {
		return anchordao.getAnchorCountByCon(anch);
	}
	
	/**
	 * 保存一条主播数据
	 * @param anchor
	 * @return String 提示信息
	 * @throws Exception
	 */
	public String saveAnchor(AnchorInformation anchor) throws Exception {
		anchordao.saveAnchor(anchor);
		return "succ";
	}

	/**
	 * 更新一条主播数据
	 * @param anchor 主播实体
	 * @param user 用户实体
	 * @return String
	 * @throws Exception
	 */
	public String updateAnchor(AnchorInformation anchor, SysUser user) throws Exception {
		String mess = "";
		//判断主播id是否存在
		if(null == anchor.getAnchorId())
			throw new RuntimeException("无法修改,主播id不存在！");
		//根据id查询主播数据，判断该主播是否存在
		AnchorInformation anch = anchordao.getAnchorById(anchor);
		if(null == anch)
			mess = "修改失败：不存在该主播数据，请刷新页面后重试！";
		else
		{
			anch.setAnchorName(anchor.getAnchorName());
			anch.setAnchorSex(anchor.getAnchorSex());
			anch.setPhone(anchor.getPhone());
			anch.setAnchorPlatform(anchor.getAnchorPlatform());
			anch.setFans(anchor.getFans());
			anch.setPitFee(anchor.getPitFee());
			anch.setNinetySale(anchor.getNinetySale());
			anch.setRoomId(anchor.getRoomId());
			anch.setBirthDay(anchor.getBirthDay());
			anch.setWorkTime(anchor.getWorkTime());
			anch.setBusinessAmount(anchor.getBusinessAmount());
			anch.setOnlinePhoto(anchor.getOnlinePhoto());
			anch.setThirtyWorkTimes(anchor.getThirtyWorkTimes());
			anch.setInvestedInformation(anchor.getInvestedInformation());
			anch.setPerCustomerPrice(anchor.getPerCustomerPrice());
			anch.setSaleCategory(anchor.getSaleCategory());
			//级联修改用户表信息
			String password = MD5Util.string2MD5(anchor.getUser().getPassword().toString());//加密修改后的密码
			
			anch.setUser(anchor.getUser());
			//修改时间和修改人
			anch.setUpdDate(new Date());
			anch.setUpdUser(anchor.getUpdUser());
			anchordao.updateAnchor(anch);
		}
		return mess;
	}

	/**
	 * 删除一条主播数据
	 * @param anchor
	 * @throws Exception
	 */
	public String delAnchor(Integer anchorId) throws Exception {
		String mess = "";
		//判断anchorId是否为空
		if(null == anchorId)
			throw new RuntimeException("无法删除,主播id不存在！");
		//根据id查询主播数据，判断该主播是否存在
		AnchorInformation anchor = new AnchorInformation();
		anchor.setAnchorId(anchorId);
		anchor = anchordao.getAnchorById(anchor);
		if(null == anchor)
			mess = "删除失败：不存在该主播数据，请刷新页面后重试！";
		else
		{
			anchordao.delAnchor(anchor);
			mess = "删除成功！";
		}
		return mess;
	}
	
}
