package edu.hfu.broadcast.action.sysset;

import java.io.IOException;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.commons.codec.binary.Base64;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import edu.hfu.broadcast.bean.ComGoodsInformation;
import edu.hfu.broadcast.bean.GoodsDistribution;
import edu.hfu.broadcast.bean.SysCompany;
import edu.hfu.broadcast.bean.SysUser;
import edu.hfu.broadcast.service.company.GoodsInformationService;
@RestController
@RequestMapping(value = "/sysgoods")
public class SysGoodsAction {
	
	@Resource
	GoodsInformationService goodsinformationservice;

	@RequestMapping(value = "/gotosysgoods", method = { RequestMethod.GET, RequestMethod.POST })
	public ModelAndView gotocomgoodsinformation() {
		ModelAndView mod = new ModelAndView("sysset/SysGoods.btl");
		return mod;
    }
	
	//查询
	@RequestMapping(value = "/getAnchorComm", method = { RequestMethod.GET, RequestMethod.POST })
	public Map<String, Object> getAnchorComm(HttpSession session, ComGoodsInformation comgoods, int page, int rows) {
		Map<String, Object> map = new HashMap<String, Object>();
		try {
			Object user = session.getAttribute("user");
			SysUser nowUser = (SysUser) user;
			/*
			 * SysCompany company =new SysCompany();
			 * company.setComName(nowUser.getCreateUser());
			 */
			System.out.println("+++++++++");
			System.out.println(comgoods);
			
			
			List<GoodsDistribution> ls =(List<GoodsDistribution> ) goodsinformationservice.getAnchorComm(nowUser,comgoods,page,rows);
			Integer count = goodsinformationservice.getAnchorCommCountByCon(nowUser,comgoods);
			System.out.println(ls.toString());
			System.out.println("+++++++++");
			//Integer count = goodsinformationservice.getComGoodsInformationCountByCon(comgoods);
			map.put("rows", ls);
			map.put("total", count);

		} catch (Exception e) {
			e.printStackTrace();
			map.put("total", 0);
			map.put("rows", null);

		}
		return map;
	}
	
	//查询
			@RequestMapping(value = "/getComgoodsByCon", method = { RequestMethod.GET, RequestMethod.POST })
			public Map<String, Object> getComgoodsByCon(HttpSession session, ComGoodsInformation comgoods, int page, int rows) {
				Map<String, Object> map = new HashMap<String, Object>();
				try {
					Object user = session.getAttribute("user");
					SysUser nowUser = (SysUser) user;
					SysCompany company =new SysCompany();
					company.setComName(nowUser.getCreateUser());
					
					
					List<ComGoodsInformation> ls = goodsinformationservice.getComGoodsInformationByCon(company,nowUser,comgoods, page, rows);
					Integer count = goodsinformationservice.getComGoodsInformationCountByCon(company,nowUser,comgoods);
					map.put("rows", ls);
					map.put("total", count);

				} catch (Exception e) {
					e.printStackTrace();
					map.put("total", 0);
					map.put("rows", null);

				}
				return map;
			}
			
			//增加	
			@RequestMapping(value = "/saveimga", method = { RequestMethod.GET, RequestMethod.POST })
			public Map<String, String>  saveimga(@RequestParam("fileimg") MultipartFile file,  ComGoodsInformation comgoods,HttpSession session,
					HttpServletRequest request) throws Exception {
				Map<String, String> mess = new HashMap<String, String>() ;
				//Map<String, String> mess = sysCompanyService.importSysCompany(file, thisStaff);

				System.out.println(comgoods);
		
				System.out.println("++++++++++++++++");
				System.out.println(file.getName());
				System.out.println(file.getClass());
				System.out.println(file.getContentType());
				System.out.println(file.getBytes());
				System.out.println();
				System.out.println(mess);
				//进行Base64编码
				Base64 base64 = new Base64();
				String encodedText = base64.encodeToString(file.getBytes());
				System.out.println(encodedText);
				mess.put("code", encodedText);
				System.out.println(mess);
				
				String mes = "";

				try {
					SysUser createUser = (SysUser) session.getAttribute("user");
					Object user = session.getAttribute("user");
					SysUser nowUser = (SysUser) user;
					SysCompany company =new SysCompany();
					company.setComName(nowUser.getCreateUser());
					comgoods.setGoodsPhoto(encodedText);
					mes = goodsinformationservice.saveSysCompanyByHand(company,nowUser,comgoods,createUser.getPhoneNum());
				} catch (Exception e) {
					e.printStackTrace();
					mes = e.toString();
				}
				mess.put("backmess", mes);
				
				
			    return mess;
				//return mess;
			}
			
			//修改
			@RequestMapping(value = "/updcomgoods", method = { RequestMethod.GET, RequestMethod.POST })
			public Map<String, String> updcomgoods(HttpSession session,@RequestParam("fileimg") MultipartFile file, ComGoodsInformation comgoods, String imgString) throws IOException {
				Map<String, String> mess = new HashMap<String, String>() ;
				String mes = "";
				//进行Base64编码
				Base64 base64 = new Base64();
				String encodedText = base64.encodeToString(file.getBytes());
				try {
					SysUser updUser = (SysUser) session.getAttribute("user");
					comgoods.setUpdDate(new Date());
					/*
					 * if(null != encodedText && !"".equals(encodedText)) {
					 * comgoods.setGoodsPhoto(encodedText); }
					 */
					
					comgoods.setGoodsPhoto(imgString);
					System.out.println(imgString);
					System.out.println(comgoods.getGoodsPhoto());
					System.out.println("-------------------");
					System.out.println(comgoods);
					System.out.println(comgoods.getGoodsPhoto());
					System.out.println(encodedText);
					mes = goodsinformationservice.updComGoodsInformation(comgoods,updUser.getPhoneNum());

				} catch (Exception e) {
					e.printStackTrace();
					mes = e.toString();
				}
				mess.put("backmess", mes);
				return mess;
			}
}
