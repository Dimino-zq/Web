package edu.hfu.broadcast.action.sysset;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

import edu.hfu.broadcast.bean.AnchorInformation;
import edu.hfu.broadcast.bean.SysCompany;
import edu.hfu.broadcast.config.WebSecurityConfig;
import edu.hfu.broadcast.service.sysset.AnchorManageService;

@RestController
@RequestMapping(value = "/anchor")
public class AnchorManageAction {
	private static final Logger LOG = LoggerFactory.getLogger(AnchorManageAction.class);

	@Resource
	AnchorManageService anchorManageservice;
	
	@RequestMapping(value = "/gotoanchor",method = {RequestMethod.GET,RequestMethod.POST})
	public ModelAndView gotoAnchor()
	{
		ModelAndView mod= new ModelAndView("sysset/anchorManagement.btl");
		return mod;
	}
	@RequestMapping(value = "/getAllanchor", method = { RequestMethod.GET, RequestMethod.POST })
	public List<AnchorInformation> getAllAnchor() {

		try {
			return anchorManageservice.getAllAnchor();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}
	
	@RequestMapping(value = "/getAnchorByCon",method = {RequestMethod.GET,RequestMethod.POST})
	public Map<String,Object> getAnchorByCon(AnchorInformation anch,int page, int rows, HttpSession session)
	{
		Map<String,Object> map=new HashMap<String, Object>();
		//从session中获取当前用户
		/*
		 * Object user = session.getAttribute("user"); if (null == user) throw new
		 * NullPointerException("查询失败：未登录状态！");
		 */
		return map;
	}
	
	@RequestMapping(value = "/saveAnchor",method = {RequestMethod.GET,RequestMethod.POST})
	public String saveAnchor(AnchorInformation anchor, HttpSession session)
	{
		String mess="";
		//从session中获取当前用户
		/*
		 * Object user = session.getAttribute("user"); if (null == user) throw new
		 * NullPointerException("查询失败：未登录状态！");
		 */
		return mess;
	}
	
	@RequestMapping(value = "/updateAnchor",method = {RequestMethod.GET,RequestMethod.POST})
	public String updateStudent(AnchorInformation anchor, HttpSession session)
	{
		String mess="";
		//从session中获取当前用户
		/*
		 * Object user = session.getAttribute("user"); if (null == user) throw new
		 * NullPointerException("查询失败：未登录状态！");
		 */
		return mess;
	}
	
    @RequestMapping(value = "/delAnchor",method = {RequestMethod.GET,RequestMethod.POST})
    public Map<String,String> delAnchor(Integer anchorId, HttpSession session)
    {
    	
    	Map<String,String> mess = new HashMap<String, String>();
		try {
			if(null == session.getAttribute("user"))
				throw new RuntimeException("删除失败：未登录状态！");
			else if(!"管理员".equals(session.getAttribute("userType")))
				throw new RuntimeException("删除失败：用户类型不匹配！");
			else if(null == anchorId)
				throw new RuntimeException("删除失败：请选择一条数据！");
			else
				mess.put("tip", anchorManageservice.delAnchor(anchorId));
		} catch (RuntimeException e) {
			LOG.debug(e.getMessage());
			mess.put("tip", e.getMessage());
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mess;
    }
	
}
